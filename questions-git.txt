QUESTIONS:

1/- C'est quoi Git ?

Git est un logiciel de gestion de version et de contrôle de code source.

2/- C'est quoi un repository git ?

Un repository git est un dépôt local ou distant permettant le contrôle de code source (ajout, modification, suppression, etc).

3/- Quelle commande faut t il écrire pour valider un ajout dans un repertoire git ?

"git add ." pour ajouter les fichiers et "git commit -m 'mon message'" pour valider les modifications (ici, l'ajout)

4/- que fait la commande git push ?

git push envoie les commits vers le serveur.

5/- quel est l'avantage de git par rapport à svn?

git est décentralisé, c'est à dire qu'il permet de travailler même lorsque le réseau ne fonctionne pas.

6/- c'est quoi la commande git stash ?

git stash permet de mettre de côté toutes les modifications apportées depuis le dernier git pull.

7/- c'est quoi la commande git branch ?

git branch permet de lister les branches existantes ainsi que la branche courrante.

8/- c'est quoi la commande git clone ?

git clone permet de récupérer (cloner) un dépôt depuis un serveur via un URL par exemple.

9/-c'est quoi la commande git config ?

git config permet de configurer Git.

10/- c'est quoi la commande git init ?

git init initialise le répertoire courant afin d'en faire un dépôt local Git.

11/- c'est quoi un conflit git ?

C'est lorsqu'un fichier est modifié en même temps par deux personnes différentes.

12/- comment resoudre un conflit git ?

Il faut aller dans le fichier où est le conflit et choisir ou fusionner les lignes qui sont en conflit.

13/- c'est quoi la commande git remote ?

git remote permet de connecter le répertoire local à un répertoire distant, sur un serveur. Github par exemple.

14/- quelle est la différence entre git remote et git clone ?

git remote connecte le dépôt local au dépôt distant alors que git clone récupère le dépôt distant vers l'ordinateur local.

15/- c'est quoi la commande git status ?

git status permet de lister l'état actuel du dépôt local. Par exemple, les fichiers modifiés, ajoutés ou supprimés...

16/- c'est quoi la commande git checkout ?

git checkout permet de récupérer le code source d'un commit ou d'une branche. Cela permet par exemple de revenir à un ancien commit.

17/- c'est quoi la commande git log ?

git log liste les différents commits effectués sur la branche courante.

18/- donner la suite de commandes à écrire pour envoyer un fichier sur un repository distant

Modifier le fichier "fichier1.txt"
git add fichier1.txt
git commit -m "Modification du fichier 1"
git push origin master

19/- c'est quoi github ?

Github est une plateforme permettant de créer des dépôts Git.

20/- citer 3 avantages d'utiliser git dans un projet

Plusieurs développeurs peuvent travailler simultanément sur le même projet, centralisé en ligne.
Les branches permettent de séparer la version de développement de la version stable et de créer des versions livrables.
Il est possible de revenir en arrière et récupérer un ancien code. Utile si le code marchait avant et plus maintenant par exemple.

21/- c'est quoi le fichier .gitignore

Le fichier .gitignore permet à Git d'ignorer certains fichiers.

22/- quelles sont les étapes permettant de lier un projet git local à github?

git init -> pour initialiser le dépôt local
git remote add origin https://mon_depot_distant.git -> pour lier le projet local au dépôt distant

23/- quel est le role des branches sur git ?

1er rôle : permet de séparer la version de développement des versions "debug"
2ème rôle : permet de créer des versions stables

24/- c'est quoi un conflit git?

IDEM question 11

25/- comment resoudre un conflit sur git ?

IDEM question 12

LE BONCOIN:

UML
---
 Personne 1-----------* Annonce
 personneId             idAnnonce 
 nom                    intitule
 prenom                 detail
 login                  prix
 motDePasse
 dateNaissance   

 - créer un projet java : Ensup-Master1-tp2-Nom-Prenom
 - configurer le git/github avec un projet java et rajouter serviceshuios en collaborateur
 
 Metier:
--------
 Personne
 Annonce
 
 Iservice:
----------
  //Crud Personne
 public int creerPersonne(List<Personne> list, Personne personne)
 public Personne getPersonne(List<Personne> list,int idPersonne)
 public void deletePersonne(List<Personne> list,int idPersonne)
 public void updatePersonne(List<Personne> list,Personne p, String nom, String prenom, Date dateNaissance)
 public List<Personne> findAllPersonnes()
 public int getPersonneId(List<Personne> list,Personne p)
 public void affichePersonnes();
 public void afficheAnnoncesPersonne(Personne p)
 //Crud Annonce
 public int creerAnnonce(Personne personne, Annonce a)
 public Annonce getAnnonce(Personne personne,int idAnnonce)
 public void deleteAnnonce(Personne personne,int idAnnonce)
 public void updateAnnonce(Personne personne,Annonce a)
 public List<Annonce> findAllAnnonce(Personne personne)

ServiceImpl
-----------
implementation de l'interface
utiliser un tableau de Personne pour office de stockage des données
public static List<Personne> base = new ArrayList<Personne>();

Lanceur
-------
Tester chaque méthode

A la fin (17h00) au plus tard pusher son code sur github  